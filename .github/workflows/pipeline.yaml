name: Deployment Pipeline

on:
  push:
    branches: [main]

  pull_request:
    branches: [main]
    types: [opened, synchronize]

  workflow_dispatch:

jobs:
  changes:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: read
    outputs:
      client: ${{ steps.filter.outputs.client }}
      server: ${{ steps.filter.outputs.server }}
    steps:
      - uses: actions/checkout@v3

      - uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: |
            client:
              - 'client/**'
            server:
              - 'server/**'

  client:
    needs: changes
    if: needs.changes.outputs.client == 'true'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          sparse-checkout: client

      - uses: actions/setup-node@v3
        with:
          node-version: '18'

      - uses: pnpm/action-setup@v2
        with:
          version: 8

      - name: Install dependencies
        run: pnpm -F client install

      # Testing and Linting here

      - name: Trigger Deployment to CloudFlare Pages
        if: |
          github.event_name == 'push' && 
          contains(join(toJson(github.event.commits.*.message)), '#skip') != true
        run: curl -X POST ${{ secrets.CLOUDFLARE_DEPLOY_HOOK}}

  server:
    needs: changes
    if: needs.changes.outputs.server == 'true'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          sparse-checkout: server

      - uses: actions/setup-node@v3
        with:
          node-version: '18'

      - uses: pnpm/action-setup@v2
        with:
          version: 8

      - name: Install dependencies
        run: pnpm -F server install

      # Testing and Linting here

      - uses: superfly/flyctl-actions/setup-flyctl@master

      - name: Trigger Deployment to Fly.io
        if: |
          github.event_name == 'push' && 
          contains(join(toJson(github.event.commits.*.message)), '#skip') != true
        run: cd server && flyctl deploy --remote-only
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}

  tag_release:
    needs: [client, server]
    if: |
      !cancelled() &&
      contains(toJson(needs.*.result), 'success') &&
      github.event_name == 'push' && 
      contains(join(toJson(github.event.commits.*.message)), '#skip') != true
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: '0'

      # - name: Bump version and push tag
      #   uses: anothrNick/github-tag-action@1.64.0
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
